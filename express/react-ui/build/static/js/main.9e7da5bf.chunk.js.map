{"version":3,"sources":["techa.jpg","registerServiceWorker.js","LoginForm.js","components/global_api.js","App.js","Application.js","index.js"],"names":["module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","catch","error","console","LoginForm","props","handle_change","e","name","target","value","setState","prevstate","newState","username","password","className","Row","align","Col","md","src","dashboard_logo","alt","onSubmit","handle_login","type","this","onChange","React","Component","api_base_url","api_token_url","getcreatedjobs","a","fetch","mode","method","headers","Authorization","localStorage","getItem","response","json","status","data","refresh","body","JSON","stringify","res","removeItem","setItem","access","reload","getqueuedjobs","gethaltjobs","getrunningjobs","getabortjobs","getdeletedjobs","getsuccessjobs","TabPane","Statistic","Countdown","Tabs","columns","title","dataIndex","key","render","text","color","columns_created","columns_queued","columns_running","LoggedInDashboard","handle_created","created","handle_queued","queued","handle_running","running","handle_successful","successful","handle_halted","halted","handle_aborted","aborted","handle_deleted","deleted","create","queue","log","halt","abort","run","deletee","success","ghost","onBack","subTitle","extra","href","rel","onClick","Logout","size","column","Item","label","defaultActiveKey","style","marginLeft","tab","SyncOutlined","spin","dataSource","PicRightOutlined","LoadingOutlined","CheckCircleTwoTone","twoToneColor","ExclamationOutlined","CloseSquareOutlined","DeleteRowOutlined","App","preventDefault","valid","validity","logged_in","alert","handle_logout","ReactDOM","document","getElementById","URL","process","origin","addEventListener","get","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.9e7da5bf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/techa.00d9c602.jpg\";","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n           console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              // console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              // console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n       console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport dashboard_logo from \"./techa.jpg\";\r\n\r\nclass LoginForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\"\r\n    };\r\n  }\r\n  handle_change = e => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    this.setState(prevstate => {\r\n      const newState = { ...prevstate };\r\n      newState[name] = value;\r\n      return newState;\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"head_pad\">\r\n          <br />\r\n          <Row align=\"top\">\r\n            <Col md=\"12\">\r\n              <div className=\"header\">\r\n                <img src={dashboard_logo} alt=\"synopsys_logo\" />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4 col-md-offset-4\"></div>\r\n          <div className=\"col-md-4 col-md-offset-4\">\r\n            <form onSubmit={e => this.props.handle_login(e, this.state)}>\r\n              <h1>Log In</h1>\r\n              <div className=\"form-group\">\r\n                <label className=\"control-label\">Username</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"username\"\r\n                  value={this.state.username}\r\n                  onChange={this.handle_change}\r\n                  className=\"form-control\"\r\n                />\r\n                <br />\r\n                <label className=\"control-label\">Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  value={this.state.password}\r\n                  onChange={this.handle_change}\r\n                  className=\"form-control\"\r\n                />\r\n                <br />\r\n                <div className=\"form-group\">\r\n                  <button className=\"btn btn-primary btn-lg\">Login</button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div className=\"col-md-4 col-md-offset-4\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n\r\nLoginForm.propTypes = {\r\n  handle_login: PropTypes.func.isRequired\r\n};\r\n","export const api_base_url = \"/api/v1/data/\";\nexport const api_token_url = \"/api/token/refresh/\";\nexport const api_login_url = \"\";\n\nexport const getcreatedjobs = async () => {\n  const response = await fetch(api_base_url + \"created/\", {\n    mode: \"cors\",\n    method: \"get\",\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"access\")}`\n    }\n  });\n  const json = await response.json();\n  if (response.status === 200) {\n    var data = {\n      refresh: localStorage.getItem(\"refresh\")\n    };\n    fetch(api_token_url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    })\n      .then(res => res.json())\n      .then(json => {\n        localStorage.removeItem(\"access\");\n        localStorage.setItem(\"access\", json.access);\n      });\n    return json;\n  } else {\n    localStorage.removeItem(\"access\");\n    window.location.reload();\n  }\n  // console.log(`${localStorage.getItem('access')}`)\n};\n\nexport const getqueuedjobs = async () => {\n  const response = await fetch(api_base_url + \"queued/\", {\n    mode: \"cors\",\n    method: \"get\",\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"access\")}`\n    }\n  });\n  const json = await response.json();\n  if (response.status === 200) {\n    var data = {\n      refresh: localStorage.getItem(\"refresh\")\n    };\n    fetch(api_token_url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    })\n      .then(res => res.json())\n      .then(json => {\n        localStorage.removeItem(\"access\");\n        localStorage.setItem(\"access\", json.access);\n      });\n    return json;\n  } else {\n    localStorage.removeItem(\"access\");\n    window.location.reload();\n  }\n  // console.log(`${localStorage.getItem('access')}`)\n};\n\nexport const gethaltjobs = async () => {\n  const response = await fetch(api_base_url + \"halt/\", {\n    mode: \"cors\",\n    method: \"get\",\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"access\")}`\n    }\n  });\n  const json = await response.json();\n  if (response.status === 200) {\n    var data = {\n      refresh: localStorage.getItem(\"refresh\")\n    };\n    fetch(api_token_url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    })\n      .then(res => res.json())\n      .then(json => {\n        localStorage.removeItem(\"access\");\n        localStorage.setItem(\"access\", json.access);\n      });\n    return json;\n  } else {\n    localStorage.removeItem(\"access\");\n    window.location.reload();\n  }\n  // console.log(`${localStorage.getItem('access')}`)\n};\n\nexport const getrunningjobs = async () => {\n  const response = await fetch(api_base_url + \"running/\", {\n    mode: \"cors\",\n    method: \"get\",\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"access\")}`\n    }\n  });\n  const json = await response.json();\n  if (response.status === 200) {\n    var data = {\n      refresh: localStorage.getItem(\"refresh\")\n    };\n    fetch(api_token_url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    })\n      .then(res => res.json())\n      .then(json => {\n        localStorage.removeItem(\"access\");\n        localStorage.setItem(\"access\", json.access);\n      });\n    return json;\n  } else {\n    localStorage.removeItem(\"access\");\n    window.location.reload();\n  }\n  // console.log(`${localStorage.getItem('access')}`)\n};\n\nexport const getabortjobs = async () => {\n  const response = await fetch(api_base_url + \"abort/\", {\n    mode: \"cors\",\n    method: \"get\",\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"access\")}`\n    }\n  });\n  const json = await response.json();\n  if (response.status === 200) {\n    var data = {\n      refresh: localStorage.getItem(\"refresh\")\n    };\n    fetch(api_token_url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    })\n      .then(res => res.json())\n      .then(json => {\n        localStorage.removeItem(\"access\");\n        localStorage.setItem(\"access\", json.access);\n      });\n    return json;\n  } else {\n    localStorage.removeItem(\"access\");\n    window.location.reload();\n  }\n  // console.log(`${localStorage.getItem('access')}`)\n};\n\nexport const getdeletedjobs = async () => {\n  const response = await fetch(api_base_url + \"deleted/\", {\n    mode: \"cors\",\n    method: \"get\",\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"access\")}`\n    }\n  });\n  const json = await response.json();\n  if (response.status === 200) {\n    var data = {\n      refresh: localStorage.getItem(\"refresh\")\n    };\n    fetch(api_token_url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    })\n      .then(res => res.json())\n      .then(json => {\n        localStorage.removeItem(\"access\");\n        localStorage.setItem(\"access\", json.access);\n      });\n    return json;\n  } else {\n    localStorage.removeItem(\"access\");\n    window.location.reload();\n  }\n  // console.log(`${localStorage.getItem('access')}`)\n};\n\nexport const getsuccessjobs = async () => {\n  const response = await fetch(api_base_url + \"successful/\", {\n    mode: \"cors\",\n    method: \"get\",\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"access\")}`\n    }\n  });\n  const json = await response.json();\n  if (response.status === 200) {\n    var data = {\n      refresh: localStorage.getItem(\"refresh\")\n    };\n    fetch(api_token_url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    })\n      .then(res => res.json())\n      .then(json => {\n        localStorage.removeItem(\"access\");\n        localStorage.setItem(\"access\", json.access);\n      });\n    return json;\n  } else {\n    localStorage.removeItem(\"access\");\n    window.location.reload();\n  }\n  // console.log(`${localStorage.getItem('access')}`)\n};\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport {\n  PageHeader,\n  Button,\n  Descriptions,\n  Tabs,\n  Empty,\n  Table,\n  Tag,\n  Statistic\n} from \"antd\";\nimport {\n  SyncOutlined,\n  PicRightOutlined,\n  ExclamationOutlined,\n  LoadingOutlined,\n  CloseSquareOutlined,\n  DeleteRowOutlined,\n  CheckCircleTwoTone\n} from \"@ant-design/icons\";\nimport {\n  getcreatedjobs,\n  getqueuedjobs,\n  gethaltjobs,\n  getabortjobs,\n  getdeletedjobs,\n  getrunningjobs,\n  getsuccessjobs,\n  api_base_url,\n  api_token_url\n} from \"./components/global_api\";\n\nconst { Countdown } = Statistic;\nconst { TabPane } = Tabs;\n\nconst columns = [\n  {\n    title: \"Name_of_Job\",\n    dataIndex: \"name\",\n    key: \"name\",\n    render: text => <a>{text}</a>\n  },\n  {\n    title: \"Time_Needed\",\n    dataIndex: \"time\",\n    key: \"time\"\n  },\n  {\n    title: \"Description\",\n    dataIndex: \"description\",\n    key: \"description\"\n  },\n  {\n    title: \"Tags\",\n    key: \"enabled\",\n    dataIndex: \"enabled\",\n    render: text => {\n      if (text === true) {\n        return <Tag color=\"processing\">Processed</Tag>;\n      } else {\n        return <Tag color=\"success\">Completed</Tag>;\n      }\n    }\n  },\n  {\n    title: \"Other Actions\",\n    dataIndex: \"others\",\n    key: \"others\"\n  }\n];\n\nconst columns_created = [\n  {\n    title: \"Name_of_Job\",\n    dataIndex: \"name\",\n    key: \"name\",\n    render: text => <a>{text}</a>\n  },\n  {\n    title: \"Time_Needed\",\n    dataIndex: \"time\",\n    key: \"time\"\n  },\n  {\n    title: \"Description\",\n    dataIndex: \"description\",\n    key: \"description\"\n  },\n  {\n    title: \"Tags\",\n    key: \"enabled\",\n    dataIndex: \"enabled\",\n    render: text => {\n      if (text === true) {\n        return <Tag color=\"processing\">Waitng for the Thread Couner</Tag>;\n      } else {\n        return <Tag color=\"success\">Sent to Queue</Tag>;\n      }\n    }\n  },\n  {\n    title: \"Other Actions\",\n    dataIndex: \"others\",\n    key: \"others\"\n  }\n];\n\nconst columns_queued = [\n  {\n    title: \"Name_of_Job\",\n    dataIndex: \"name\",\n    key: \"name\",\n    render: text => <a>{text}</a>\n  },\n  {\n    title: \"Time_Needed\",\n    dataIndex: \"time\",\n    key: \"time\"\n  },\n  {\n    title: \"Description\",\n    dataIndex: \"description\",\n    key: \"description\"\n  },\n  {\n    title: \"Tags\",\n    key: \"enabled\",\n    dataIndex: \"enabled\",\n    render: text => {\n      if (text === true) {\n        return <Tag color=\"processing\">Waiting in queue</Tag>;\n      } else {\n        return <Tag color=\"success\">Sent to Running Worker</Tag>;\n      }\n    }\n  },\n  {\n    title: \"Other Actions\",\n    dataIndex: \"others\",\n    key: \"others\"\n  }\n];\n\nconst columns_running = [\n  {\n    title: \"Name_of_Job\",\n    dataIndex: \"name\",\n    key: \"name\",\n    render: text => <a>{text}</a>\n  },\n  {\n    title: \"Total_Time_Allocated\",\n    dataIndex: \"time\",\n    key: \"time\"\n  },\n  {\n    title: \"Description\",\n    dataIndex: \"description\",\n    key: \"description\"\n  },\n  {\n    title: \"Tags\",\n    key: \"enabled\",\n    dataIndex: \"enabled\",\n    render: text => {\n      if (text === true) {\n        return <Tag color=\"processing\">Running</Tag>;\n      } else {\n        return <Tag color=\"success\">Completed</Tag>;\n      }\n    }\n  },\n  {\n    title: \"Other Actions\",\n    dataIndex: \"others\",\n    key: \"others\"\n  }\n];\n\n//Sample Data to be tested\nconst data = [\n  {\n    key: \"1\",\n    name: \"Task 1\",\n    time: 25,\n    description: \"Task Updated in Queue\",\n    enabled: \"true\",\n    others: \"let's test\"\n  }\n];\n\nclass LoggedInDashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      created: [],\n      queued: [],\n      halted: [],\n      aborted: [],\n      running: [],\n      deleted: [],\n      successful: []\n    };\n  }\n\n  async componentDidMount() {\n    const create = await getcreatedjobs();\n    this.setState({ created: create });\n    const queue = await getqueuedjobs();\n    this.setState({ queued: queue });\n    console.log(\"created jobs\", create);\n    const halt = await gethaltjobs();\n    this.setState({ halted: halt });\n    console.log(\"halted jobs\", halt);\n    const abort = await getabortjobs();\n    this.setState({ aborted: abort });\n    console.log(\"aborted jobs\", abort);\n    const run = await getrunningjobs();\n    this.setState({ running: run });\n    console.log(\"running jobs\", run);\n    const deletee = await getdeletedjobs();\n    this.setState({ deleted: deletee });\n    console.log(\"deleted jobs\", deletee);\n    const success = await getsuccessjobs();\n    this.setState({ successful: success });\n    console.log(\"successful jobs\", success);\n  }\n\n  handle_created = () => {\n    fetch(api_base_url + \"created/\", {\n      mode: \"cors\",\n      method: \"get\",\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"access\")}`\n      }\n    })\n      .then(function(res) {\n        if (res.status === 200) {\n          var data = {\n            refresh: localStorage.getItem(\"refresh\")\n          };\n          fetch(api_token_url, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(data)\n          })\n            .then(res => res.json())\n            .then(json => {\n              localStorage.removeItem(\"access\");\n              localStorage.setItem(\"access\", json.access);\n            });\n        } else {\n          localStorage.removeItem(\"access\");\n          window.location.reload();\n        }\n        return res.json();\n      })\n      .then(json => this.setState({ created: json }));\n  };\n\n  handle_queued = () => {\n    fetch(api_base_url + \"queued/\", {\n      mode: \"cors\",\n      method: \"get\",\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"access\")}`\n      }\n    })\n      .then(function(res) {\n        if (res.status === 200) {\n          var data = {\n            refresh: localStorage.getItem(\"refresh\")\n          };\n          fetch(api_token_url, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(data)\n          })\n            .then(res => res.json())\n            .then(json => {\n              localStorage.removeItem(\"access\");\n              localStorage.setItem(\"access\", json.access);\n            });\n        } else {\n          localStorage.removeItem(\"access\");\n          window.location.reload();\n        }\n        return res.json();\n      })\n      .then(json => this.setState({ queued: json }));\n  };\n\n  handle_running = () => {\n    fetch(api_base_url + \"running/\", {\n      mode: \"cors\",\n      method: \"get\",\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"access\")}`\n      }\n    })\n      .then(function(res) {\n        if (res.status === 200) {\n          var data = {\n            refresh: localStorage.getItem(\"refresh\")\n          };\n          fetch(api_token_url, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(data)\n          })\n            .then(res => res.json())\n            .then(json => {\n              localStorage.removeItem(\"access\");\n              localStorage.setItem(\"access\", json.access);\n            });\n        } else {\n          localStorage.removeItem(\"access\");\n          window.location.reload();\n        }\n        return res.json();\n      })\n      .then(json => this.setState({ running: json }));\n  };\n\n  handle_successful = () => {\n    fetch(api_base_url + \"successful/\", {\n      mode: \"cors\",\n      method: \"get\",\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"access\")}`\n      }\n    })\n      .then(function(res) {\n        if (res.status === 200) {\n          var data = {\n            refresh: localStorage.getItem(\"refresh\")\n          };\n          fetch(api_token_url, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(data)\n          })\n            .then(res => res.json())\n            .then(json => {\n              localStorage.removeItem(\"access\");\n              localStorage.setItem(\"access\", json.access);\n            });\n        } else {\n          localStorage.removeItem(\"access\");\n          window.location.reload();\n        }\n        return res.json();\n      })\n      .then(json => this.setState({ successful: json }));\n  };\n\n  handle_halted = () => {\n    fetch(api_base_url + \"halt/\", {\n      mode: \"cors\",\n      method: \"get\",\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"access\")}`\n      }\n    })\n      .then(function(res) {\n        if (res.status === 200) {\n          var data = {\n            refresh: localStorage.getItem(\"refresh\")\n          };\n          fetch(api_token_url, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(data)\n          })\n            .then(res => res.json())\n            .then(json => {\n              localStorage.removeItem(\"access\");\n              localStorage.setItem(\"access\", json.access);\n            });\n        } else {\n          localStorage.removeItem(\"access\");\n          window.location.reload();\n        }\n        return res.json();\n      })\n      .then(json => this.setState({ halted: json }));\n  };\n\n  handle_aborted = () => {\n    fetch(api_base_url + \"abort/\", {\n      mode: \"cors\",\n      method: \"get\",\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"access\")}`\n      }\n    })\n      .then(function(res) {\n        if (res.status === 200) {\n          var data = {\n            refresh: localStorage.getItem(\"refresh\")\n          };\n          fetch(api_token_url, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(data)\n          })\n            .then(res => res.json())\n            .then(json => {\n              localStorage.removeItem(\"access\");\n              localStorage.setItem(\"access\", json.access);\n            });\n        } else {\n          localStorage.removeItem(\"access\");\n          window.location.reload();\n        }\n        return res.json();\n      })\n      .then(json => this.setState({ aborted: json }));\n  };\n\n  handle_deleted = () => {\n    fetch(api_base_url + \"deleted/\", {\n      mode: \"cors\",\n      method: \"get\",\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"access\")}`\n      }\n    })\n      .then(function(res) {\n        if (res.status === 200) {\n          var data = {\n            refresh: localStorage.getItem(\"refresh\")\n          };\n          fetch(api_token_url, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(data)\n          })\n            .then(res => res.json())\n            .then(json => {\n              localStorage.removeItem(\"access\");\n              localStorage.setItem(\"access\", json.access);\n            });\n        } else {\n          localStorage.removeItem(\"access\");\n          window.location.reload();\n        }\n        return res.json();\n      })\n      .then(json => this.setState({ deleted: json }));\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"site-page-header-ghost-wrapper\">\n          <PageHeader\n            ghost={false}\n            onBack={() => window.location.reload()}\n            title=\"DASHBOARD TO SCHEDULER\"\n            subTitle=\"We can monitor jobs here\"\n            extra={[\n              <Button key=\"3\">\n                <a\n                  href=\"http://saurabh9495.org:8000/admin/\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  Admin Panel\n                </a>\n              </Button>,\n              <Button key=\"2\" type=\"primary\">\n                Home\n              </Button>,\n              <Button\n                key=\"1\"\n                type=\"danger\"\n                onClick={this.props.Logout}\n                className=\"float-right\"\n              >\n                Logout\n              </Button>\n            ]}\n          >\n            <Descriptions size=\"small\" column={3}>\n              <Descriptions.Item label=\"Created\">\n                Saurabh Kumar\n              </Descriptions.Item>\n              <Descriptions.Item label=\"Association\">\n                <a>Sample Project</a>\n              </Descriptions.Item>\n              <Descriptions.Item label=\"Creation Time\">\n                2020-09-28\n              </Descriptions.Item>\n              <Descriptions.Item label=\"Effective Time\">\n                2020-09-30\n              </Descriptions.Item>\n              <Descriptions.Item label=\"Remarks\">\n                It'll monitor Create, Queue, Halt, Run, Abort, Deleted and\n                Success Jobs.{\" \"}\n              </Descriptions.Item>\n            </Descriptions>\n          </PageHeader>\n        </div>\n        <Tabs defaultActiveKey=\"1\" style={{ marginLeft: \"2%\" }}>\n          <TabPane\n            tab={\n              <span>\n                <SyncOutlined spin />\n                <Button onClick={() => this.handle_created()}>\n                  Created Jobs\n                </Button>\n              </span>\n            }\n            key=\"1\"\n          >\n            <Table columns={columns_created} dataSource={this.state.created} />\n          </TabPane>\n          <TabPane\n            tab={\n              <span>\n                <PicRightOutlined />\n                <Button onClick={() => this.handle_queued()}>\n                  Queued Jobs\n                </Button>\n              </span>\n            }\n            key=\"2\"\n          >\n            <Table columns={columns_queued} dataSource={this.state.queued} />\n          </TabPane>\n          <TabPane\n            tab={\n              <span>\n                <LoadingOutlined />\n                <Button onClick={() => this.handle_running()}>\n                  Running Jobs\n                </Button>\n              </span>\n            }\n            key=\"3\"\n          >\n            <Table columns={columns_running} dataSource={this.state.running} />\n          </TabPane>\n          <TabPane\n            tab={\n              <span>\n                <CheckCircleTwoTone twoToneColor=\"#52c41a\" />\n                <Button onClick={() => this.handle_successful()}>\n                  Successful Jobs\n                </Button>\n              </span>\n            }\n            key=\"4\"\n          >\n            <Table columns={columns} dataSource={this.state.successful} />\n          </TabPane>\n          <TabPane\n            tab={\n              <span>\n                <ExclamationOutlined />\n                <Button onClick={() => this.handle_halted()}>\n                  halted Jobs\n                </Button>\n              </span>\n            }\n            key=\"5\"\n          >\n            <Table columns={columns} dataSource={this.state.halted} />\n          </TabPane>\n\n          <TabPane\n            tab={\n              <span>\n                <CloseSquareOutlined />\n                <Button onClick={() => this.handle_aborted()}>\n                  Aborted Jobs\n                </Button>\n              </span>\n            }\n            key=\"6\"\n          >\n            <Table columns={columns} dataSource={this.state.aborted} />\n          </TabPane>\n          <TabPane\n            tab={\n              <span>\n                <DeleteRowOutlined />\n                <Button onClick={() => this.handle_deleted()}>\n                  Deleted Jobs\n                </Button>\n              </span>\n            }\n            key=\"7\"\n          >\n            <Table columns={columns} dataSource={this.state.deleted} />\n          </TabPane>\n        </Tabs>\n        <Empty />\n      </div>\n    );\n  }\n}\n\nexport default LoggedInDashboard;\n","import React, { Component } from \"react\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport \"./App.css\";\r\nimport { api_login_url } from \"./components/global_api\";\r\nimport LoggedInDashboard from \"./App\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      logged_in: localStorage.getItem(\"access\") ? true : false\r\n    };\r\n  }\r\n\r\n  handle_login = (e, data) => {\r\n    console.log(data);\r\n    e.preventDefault();\r\n    fetch(api_login_url + \"/api/token/\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Access-Control-Allow-Origin\": \"*\"\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n      .then(res => res.json())\r\n      .then(json => {\r\n        localStorage.setItem(\"access\", json.access);\r\n        localStorage.setItem(\"refresh\", json.refresh);\r\n        if (json.valid === \"true\") {\r\n          localStorage.setItem(\"validity\", json.valid);\r\n          this.setState({ validity: json.valid });\r\n        }\r\n        // console.log(data.username)\r\n        if (json.access)\r\n          this.setState({\r\n            logged_in: true\r\n          });\r\n        else {\r\n          this.setState({\r\n            logged_in: false\r\n          });\r\n          // console.log(json);\r\n          alert(\"Invalid Credentials\");\r\n        }\r\n      });\r\n  };\r\n\r\n  handle_logout = () => {\r\n    localStorage.removeItem(\"access\");\r\n    localStorage.removeItem(\"validity\");\r\n    this.setState({ logged_in: false, validity: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h3>\r\n          {this.state.logged_in ? (\r\n            <LoggedInDashboard Logout={this.handle_logout} />\r\n          ) : (\r\n            <LoginForm handle_login={this.handle_login} />\r\n          )}\r\n        </h3>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport App from \"./Application\";\n\n// require('@synopsys-sig/seeker-inline');\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}